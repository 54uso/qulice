<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='puzzles.xsl'?><puzzles>
   <puzzle>
      <ticket>44</ticket>
      <file>qulice-checkstyle/src/main/java/com/qulice/checkstyle/CheckstyleValidator.java</file>
      <prefix>     * </prefix>
      <body>Perform refactoring: remove this method, use Environment.files() instead.</body>
      <estimate>60</estimate>
      <lines>207-208</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>1</ticket>
      <file>qulice-checkstyle/src/main/java/com/qulice/checkstyle/ConstantUsageCheck.java</file>
      <prefix> * </prefix>
      <body>ConstantUsageCheck doesn't work. This check is still in development and is not used in a released version. Let's try to fix it and enable its validation inside ChecksTest. Also, don't forget to enable it inside checks.xml and make sure all maven-invoker-plugin tests pass</body>
      <estimate>0</estimate>
      <lines>42-46</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>1</ticket>
      <file>qulice-checkstyle/src/main/java/com/qulice/checkstyle/NonStaticMethodCheck.java</file>
      <prefix> * </prefix>
      <body>NonStaticMethodCheck doesn't work. This check is still in development and is not used in a released version. Let's try to fix it and enable its validation inside ChecksTest. Also, don't forget to enable it inside checks.xml and make sure all maven-invoker-plugin tests pass</body>
      <estimate>0</estimate>
      <lines>46-50</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>143</ticket>
      <file>qulice-checkstyle/src/main/java/com/qulice/checkstyle/PuzzleDuplicateCheck.java</file>
      <prefix> * </prefix>
      <body>Add handling of non-java files (e.g. xml, groovy).</body>
      <estimate>0</estimate>
      <lines>46-46</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>55</ticket>
      <file>qulice-checkstyle/src/test/resources/com/qulice/checkstyle/ChecksTest/PuzzleFormatCheck/Invalid.java</file>
      <prefix>     * </prefix>
      <body>First line is correct, but second line is impropertly indented</body>
      <estimate>0</estimate>
      <lines>14-15</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>555</ticket>
      <file>qulice-checkstyle/src/test/resources/com/qulice/checkstyle/ChecksTest/PuzzleFormatCheck/Valid.java</file>
      <prefix> * </prefix>
      <body>Some text with proper indentation of the second and all consecutive lines.</body>
      <estimate>0</estimate>
      <lines>7-7</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>JIRA-7643</ticket>
      <file>qulice-checkstyle/src/test/resources/com/qulice/checkstyle/ChecksTest/PuzzleFormatCheck/Valid.java</file>
      <prefix> * </prefix>
      <body>Longer format of puzzle marker</body>
      <estimate>90</estimate>
      <lines>10-10</lines>
      <owner>author</owner>
   </puzzle>
   <puzzle>
      <ticket>123</ticket>
      <file>qulice-maven-plugin/src/it/checkstyle-violations/src/main/java/com/qulice/plugin/violations/Brackets.java</file>
      <prefix>     * </prefix>
      <body>Make this better in multiple lines but different.</body>
      <estimate>0</estimate>
      <lines>44-45</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>123</ticket>
      <file>qulice-maven-plugin/src/it/checkstyle-violations/src/main/java/com/qulice/plugin/violations/Brackets.java</file>
      <prefix>     * </prefix>
      <body>Make this better in multiple lines.</body>
      <estimate>0</estimate>
      <lines>67-68</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>123</ticket>
      <file>qulice-maven-plugin/src/it/checkstyle-violations/src/main/java/com/qulice/plugin/violations/Violations.java</file>
      <prefix>     * </prefix>
      <body>First second</body>
      <estimate>0</estimate>
      <lines>9-10</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>123</ticket>
      <file>qulice-maven-plugin/src/it/checkstyle-violations/src/main/java/com/qulice/plugin/violations/Violations.java</file>
      <prefix>     * </prefix>
      <body>First second</body>
      <estimate>0</estimate>
      <lines>20-21</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>44</ticket>
      <file>qulice-pmd/src/main/java/com/qulice/pmd/Files.java</file>
      <prefix>     * </prefix>
      <body>Perform refactoring: remove this method, use Environment.files() instead, in order to simplify files manipulations.</body>
      <estimate>0</estimate>
      <lines>56-58</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>153</ticket>
      <file>qulice-spi/src/main/java/com/qulice/spi/Environment.java</file>
      <prefix>     * </prefix>
      <body>Using File as classpath element is dangerous, as it won't work under Windows without conversion - classpaths always use slashes, while File objects under Windows will always use backslashes. This method should return a collection of elements that are not affected by OS.</body>
      <estimate>0</estimate>
      <lines>86-90</lines>
      <owner>someone</owner>
   </puzzle>
   <puzzle>
      <ticket>13</ticket>
      <file>qulice-xml/src/test/java/com/qulice/xml/XmlValidatorTest.java</file>
      <prefix>     * </prefix>
      <body>The test doesn't work because functionality is not implemented yet.</body>
      <estimate>0</estimate>
      <lines>47-48</lines>
      <owner>someone</owner>
   </puzzle>
</puzzles>